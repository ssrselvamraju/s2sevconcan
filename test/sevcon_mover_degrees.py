##############################################################################
# Project: 	SeegridS2SevconCAN
# Module: 	sevcon_mover_degrees.py
# Purpose: 	Write values to a file to make the sevcon motor move to an angle.
# Language:	Python 3.5
# Date:		18-Sep-2013.
# Ver.:		18-Sep-2013.
# Copyright:	2013 - 2014 - S. Selvam Raju @SEEGRID corp.       <sraju@seegrid.com>
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 
# Important:	WHEN EDITING THIS FILE, USE TABS TO INDENT - NOT SPACES!
##############################################################################

# Name of this program.
_SOFTNAME = 'Sevcon_Mover_Degrees'

# Version of this server.
_VERSION = '18-Sep-2013'

_HelpStr = """
%s, %s
This module writes a text file in a PCan driver accessible format to send CAN messages to the SEVCON motor to turn to particular angles. The module accepts angles in degrees and generates the appropriate HEX bytes for the move command. This program is a modification of the sevcon_mover.py which was originally designed to directly input the HEX bytes.The mapping of the degrees is not perfect currently, due to limited information available form SEVCON and will be corrected as the information required is obtained.

""" % (_SOFTNAME, _VERSION)

############################################################

###Imports###
import os
import time
import numpy as np

###Globals###
FFFF = '0xFFFF'
lowerByte = '0x00'
upperByte = '0x00'

print "\n\n#####################################################################"
###Get User input###
print "\nThis program allows you to move +/- 90 degrees from the center position. This program accepts angles in the range -90deg to +90 deg.\nPlease enter the angle to be able to move the motor. \n\nPositive anlges can be entered without a sign and imply anti-clockwise motion from the center. \nNegative angles are to be entered with a '-' sign prefixed and imply clockwise motion from the center.\n"


while True:
	print "#####################################################################"
	angle = int(raw_input("\nEnter Angle: "))
#	print "Entered angle: " + str(angle)
	
	if angle > (90) or angle <(-90):
		print "\nValues entered are out of range, please try again"
		time.sleep(3)
		continue

	###Convert Angle to Hex
	angle_hex_val = hex(int(round(abs(angle) * 60.6815)))

	if angle < 0:
		angle_hex = hex(int(FFFF,16)-int(angle_hex_val,16))
	else:
		angle_hex = angle_hex_val

#	print "#####angle_hex: " + angle_hex
	###Compute lower and upper byte
	angle_hex_formatted = angle_hex[2:].zfill(4)
	lowerByte = angle_hex_formatted[2:]
	upperByte = angle_hex_formatted[:2]
#	print "\n#####upperByte: " + upperByte + " lowerByte: " + lowerByte
	###Write to file###
	file = open("move_sevcon.txt","w")
	file.write("#CAN messages for Sevcon position control\n")
	file.write("#This file is autogenerated by sevcon_mover.py\n")
	###Writing to addresses 30E0_00 to the ID 607
	file.write("m s 0x607 8 0x23 0xE0 0x30 0x00 0x" + lowerByte + " 0x" + upperByte + " 0x00 0x00\n")
	file.close()

	print "\n\nSending following commands via CAN"
	os.system("cat move_sevcon.txt")
	#time.sleep(10)
	print "\n\n"
	###Call the Transmit test program and wait for a max of 1 seconds###

	os.system("./transmitest move_sevcon.txt -f=/dev/pcan32 -b=0x031C -r=500")

	time.sleep(1)




#print "Exiting..."



